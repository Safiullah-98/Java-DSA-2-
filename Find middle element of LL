// Find The middle element  of the linkedList O(N)
import java.util.*;
class Main{
    Node head;
    class Node{
        int data;
        Node next;
        Node(int data){
            this.data = data;
            this.next = null;
        }
    }
    // create middle element  of the linkedList
    public void findMiddleElement(){
        Node slow = head;
        Node fast = head;
        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
       System.out.println("The middle element is " + slow.data);

    }
        // create print the linkedList
    public void printList(){
        if(head == null){
            System.out.print("list is empty");
            return;
        }

        Node currNode = head;
        while(currNode != null){
            System.out.print(currNode.data + "->");
            currNode = currNode.next;
        }
        System.out.println("null");
    }

    // create push method
    public void push(int data){
        Node newNode = new Node(data);
        newNode.next = head;
        head = newNode;
    }

    // driver code
    public static void main(String [] args){
        Main list = new Main();
        list.push(6);
        list.push(5);
        list.push(4);
        list.push(3);
        list.push(2);
        list.push(1);
        list.printList();
        list.findMiddleElement();
    }

}
